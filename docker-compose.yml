version: '3.7'
services:
  postgredb:
    image: postgres:latest
    container_name: postgredb
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=def_user
      - POSTGRES_PASSWORD=pass
      - PG_DATA=/var/lib/postgresql/data
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgres/sql/postgresql.conf

  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - ./mongo-data:/data/db
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - postgredb
      - mongodb

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    command: [ "--kafka.server=broker:29092" ]
    restart: unless-stopped
    ports:
      - '9308:9308'
    depends_on:
      - broker

  keycloak:
    image: quay.io/keycloak/keycloak:18.0.2
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - ./keycloak/themes:/opt/keycloak/themes/custom/login
    command:
      - start-dev
    ports:
      - "8181:8080"

  elasticsearch:
    image: elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - xpack.ml.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
    ports:
      - '9200:9200'
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: always

  logstash:
    image: logstash:8.12.2
    container_name: logstash
    volumes:
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline
      - ./monitoring/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    ports:
      - '5000:5000'
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:8.12.2
    container_name: kibana
    ports:
      - '5601:5601'
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    links:
      - elasticsearch
    depends_on:
      - logstash

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - '9411:9411'

  discovery-server:
    image: discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    restart: always

  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/taxi-realm
    depends_on:
      - discovery-server
      - broker
      - keycloak
    restart: always

  payment-service:
    container_name: payment-service
    image: payment-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - discovery-server
      - api-gateway
      - postgredb
      - broker
    restart: always

  passenger-service:
    container_name: passenger-service
    image: passenger-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - discovery-server
      - api-gateway
      - postgredb
      - broker
    restart: always

  driver-service:
    container_name: driver-service
    image: driver-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - discovery-server
      - api-gateway
      - postgredb
      - broker
    restart: always

  ride-service:
    container_name: ride-service
    image: ride-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - discovery-server
      - api-gateway
      - mongodb
      - broker
    restart: always

volumes:
  elasticsearch_data:
    driver: local

